---
title: 'Preparing a Dashboard'
subtitle: "The Data Science of Everyday Music Listening"
author: "John Ashley Burgoyne"
date: "2023-12-11"
format: 
  html:
    toc: true
    embed-resources: true
    theme: paper
---

## Learning `flexdashboard`

We'll review the highlights of the `flexdashboard` documentation together.

  - [https://rmarkdown.rstudio.com/flexdashboard/](https://rmarkdown.rstudio.com/flexdashboard/)
  
Pay particular attention to the layout possibilities. 

  - How many pages do you think you will want/need?
  - Which pages will be best served by a column layout and which by a row layout? 
  - Will you use tabs anywhere?  
  - Which panes will have descriptive text and which will have visualizations?

## Connect RStudio to Github

1. Follow the pre-workshop installation instructions at [https://happygitwithr.com/workshops](https://happygitwithr.com/workshops).
  - This usually takes much less time than they suggest!
2. From your Github repository page, click the Settings tab.
3. Scroll down to the Github Pages heading and change the Source button from ‘None’ to ‘main’.
4. Scroll back down to the GitHub Pages heading, and Github should now say that your site is published and give a link to your new web page, usually of the form `https://YOUR_USERNAME.github.io/YOUR_REPOSITORY_NAME/`.
  - Sometimes it takes a few minutes for Github to update, but soon, you should be able to check the link and see a nicely rendered version of your README file.

## Setting up your portfolio

1. Install the `flexdashboard` package.
2. Create a new file called `index.Rmd` in your RStudio project.
    - Choose R Markdown from the File:New File menu and use the `flexdashboard` template.
3. Enter the basic structure you decided upon for your portfolio.
4. Choose a theme.
5. Knit your R Markdown file.
6. Commit and push to Github.
7. After a few minutes, you should be able to see our dashboard at `https://YOUR_USERNAME.github.io/YOUR_REPOSITORY_NAME`

## Collaborate with Github (optional)

1. Choose one member of your group to manage the project repository.
2. That member needs to add the other group members as collaborators from Github (under Settings:Manage Access).
  - In order to add everybody, you will need a Github Pro account. That is free for students by making a request at https://education.github.com/discount_requests/new
3. Each non-managing member should create a new RStudio Project from version control, using the Repository URL of the managing member's repository.
4. In addition to committing and pushing, you now will want to Pull occasionally, to bring in other members' updates.
5. Be sure to commit and push often to avoid conflicts! Usually git is smart about merging multiple changes, but not always.
